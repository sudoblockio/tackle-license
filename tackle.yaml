
<-:
  help: Create a license file

  output:
    type: str
    description: The output directory to put a `LICENSE` file
    default->: input Which directory to generate the license file?
  license_file_name:
    type: str
    description: The name of the license file
    default: LICENSE
  license_type:
    type: str
    description: The type of license, one of apache, mit, gpl-v3, bsd, closed-source
    default:
      ->: select
      choices:
        - Apache 2.0: apache
        - MIT: mit
        - GPL Version 3: gpl-v3
        - BSD Version 3: bsd
        - Closed source: closed-source
  author:
    type: str
    description: The author / authors used for MIT, BSD, Apache, and Closed Source licenses
    default: ""
  author_email:
    type: str
    description: The author email used for the Closed Source license
    default: ""
  owner:
    type: str
    description: The owner used for the Closed Source license
    default: ""
  start_date:
    type: str
    description: The start year, used for BSD license
    default: ""
  end_date:
    type: str
    description: The end date, can be current date, for BSD and Apache
    default: ""

  exec<-:
    author:
      ->: input Who are the license holders?
      if: author == '' and license_type in ['mit','bsd','apache']

    author_email:
      ->: input An email for the license holder?
      if: author_email == '' and license_type in ['closed-source']

    owner:
      ->: input Who are the license holders?
      if: owner == '' and license_type in ['closed-source']

    start_date:
      ->: input What year to start the license from? --default 2021
      if: start_date == '' and license_type == 'bsd'

    end_date:
      ->: input What year to end the license? (current year is fine) --default {{date_now("%Y")|string}}
      if: end_date == '' and license_type in ['bsd','apache']

    date:
      ->: date_now "%B %Y"
      if: license_type in ['closed-source']

    gen_>: generate {{path_join(['templates',join([license_type,'.txt'])])}} {{path_join([output,'LICENSE'])}}

    # TODO: Export a header that can be put in comments of code
    header: TODO